import{s as n}from"./main-BYt0atFx.js";const H=async i=>{try{const{data:e,error:a}=await n.functions.invoke("process-notifications",{body:{notifications:i}});if(a)throw console.error("Erro na Edge Function process-notifications:",a),a;return e}catch(e){throw console.error("Erro ao processar notificações em lote:",e),e}},R=async(i,e)=>{try{const{data:a,error:t}=await n.from("notifications").insert({user_id:i,type:e.type,title:e.title,message:e.message,data:e.data||{},read:!1,created_at:new Date().toISOString()}).select().single();if(t)throw console.error("Erro ao criar notificação:",t),t;return a}catch(a){throw console.error("Erro ao criar notificação:",a),a}};class y{static NotificationType=Object.freeze({EVENT:"event",ASSIGNMENT:"assignment",ANNOUNCEMENT:"announcement",SYSTEM:"system",FEEDBACK:"feedback",REMINDER:"reminder"});static NotificationPriority=Object.freeze({LOW:"low",NORMAL:"normal",HIGH:"high",URGENT:"urgent"});static NotificationCategory=Object.freeze({SYSTEM_UPDATE:"system_update",ACCOUNT:"account",COURSE:"course",ASSIGNMENT:"assignment",EXAM:"exam",GRADE:"grade",MENTION:"mention",COMMENT:"comment",MESSAGE:"message",ANNOUNCEMENT:"announcement",REMINDER:"reminder",ALERT:"alert",PLAGIARISM_ALERT:"plagiarism_alert",AI_DETECTION:"ai_detection"});static async sendNotificationsBatch(e){try{return await H(e)}catch(a){throw console.error("Error sending notifications in batch:",a),a}}static NotificationStatus=Object.freeze({UNREAD:"unread",READ:"read",ARCHIVED:"archived"});static sleep=e=>new Promise(a=>setTimeout(a,e));static withRetry=async(e,a=3)=>{for(let t=0;t<a;t++)try{return await e()}catch(r){if(t===a-1)throw r;await y.sleep(1e3*(t+1))}};static async getNotifications({unreadOnly:e=!1,limit:a=50,offset:t=0,type:r=null,category:s=null}={}){const{data:o,error:l}=await n.auth.getUser();if(l)throw l;const p=o.user?.id;if(!p)throw new Error("No user is currently signed in");let u=n.from("notifications").select("*").eq("user_id",p).order("created_at",{ascending:!1}).range(t,t+a-1);e&&(u=u.eq("is_read",!1)),r&&(u=u.eq("type",r)),s&&(u=u.eq("category",s));const{data:g,error:f}=await u;if(f)throw f;return g||[]}static async markAsRead(e,{userId:a}={}){const t=Array.isArray(e)?e:[e];try{let r=n.from("notifications").update({is_read:!0,read_at:new Date().toISOString()}).in("id",t);a&&(r=r.eq("user_id",a));const{data:s,error:o}=await r;if(o)throw o;return{success:!0,message:"Notifications marked as read successfully",affected:s?.length||0}}catch(r){return console.error("Error marking notifications as read:",r),{success:!1,message:r.message,affected:0}}}static async markAllAsRead(){const{error:e}=await n.from("notifications").update({is_read:!0,read_at:new Date().toISOString()}).eq("is_read",!1);if(e)throw e;return!0}static async deleteNotification(e,{userId:a}={}){const t=Array.isArray(e)?e:[e];try{let r=n.from("notifications").delete().in("id",t);a&&(r=r.eq("user_id",a));const{data:s,error:o}=await r;if(o)throw o;return{success:!0,message:"Notifications deleted successfully",deleted:s?.length||0}}catch(r){return console.error("Error deleting notifications:",r),{success:!1,message:r.message,deleted:0}}}static async sendNotification({title:e,message:a,type:t,category:r,priority:s=y.NotificationPriority.NORMAL,referenceId:o,referenceType:l,actionUrl:p,metadata:u={}},g=null){if(!Object.values(y.NotificationType).includes(t))throw new Error(`Invalid notification type: ${t}`);if(s&&!Object.values(y.NotificationPriority).includes(s))throw new Error(`Invalid priority: ${s}`);if(!g){const{data:v,error:b}=await n.auth.getUser();if(b)throw b;if(g=v.user?.id,!g)throw new Error("No user is currently signed in")}const f={type:t,title:e,message:a,data:{category:r||null,priority:s,referenceId:o||null,referenceType:l||null,actionUrl:p||null,...u}};try{return await R(g,f)}catch(v){console.error("Error using Edge Function, falling back to direct insert:",v);const{data:b,error:C}=await n.from("notifications").insert({...f,user_id:g,created_at:new Date().toISOString()}).select().single();if(C)throw C;return b}}static async getUnreadCount(){const{data:e,error:a}=await n.auth.getUser();if(a)throw a;const t=e.user?.id;if(!t)return 0;const{data:r,error:s}=await n.from("notifications").select("id").eq("user_id",t).eq("is_read",!1).range(0,999);if(s)throw s;return r?.length||0}static async subscribeToNotifications(e){const{data:{user:a}}=await n.auth.getUser(),t=a?.id;if(!t)return{unsubscribe:()=>{}};const r=n.channel("notifications").on("postgres_changes",{event:"INSERT",schema:"public",table:"notifications",filter:`user_id=eq.${t}`},s=>{typeof e=="function"&&e(s.new)}).subscribe();return{unsubscribe:()=>{try{n.removeChannel(r)}catch{}}}}async subscribeToNotifications(e){return await y.subscribeToNotifications(e)}async getNotifications(e={}){return{data:await y.getNotifications(e)}}async markAsRead(e,a={}){return await y.markAsRead(e,a)}async deleteNotification(e,a={}){return await y.deleteNotification(e,a)}async markAllAsRead(){return await y.markAllAsRead()}async getUnreadCount(){return await y.getUnreadCount()}async sendNotification(e,a=null){return await y.sendNotification(e,a)}}const M=new y,_={async sendEmail({to:i,subject:e,html:a,text:t,from:r}){if(!i||!e||!a&&!t)return{success:!1,error:"Missing required fields: to, subject, and html or text"};const{data:s,error:o}=await n.functions.invoke("send-email",{body:{to:i,subject:e,html:a,text:t,from:r}});return o?(console.error("EmailService.sendEmail error:",o),{success:!1,error:o.message||"invoke failed"}):{success:!!s?.success,emailId:s?.emailId,error:s?.error}},render(i="",e={}){return String(i).replace(/{{\s*([\w.]+)\s*}}/g,(a,t)=>t.split(".").reduce((s,o)=>s&&s[o]!==void 0?s[o]:"",e)??"")}};class O{static async send(e,a={}){const{to:t,variables:r={},language:s="pt",from:o,replyTo:l,attachments:p,tracking:u=!1}=a;if(!t)return{success:!1,error:"Recipient email is required"};if(!e)return{success:!1,error:"Template ID is required"};try{const{data:g,error:f}=await n.functions.invoke("send-email-v2",{body:{templateId:e,to:t,variables:r,language:s,from:o,replyTo:l,attachments:p,tracking:u}});return f?(console.error("EmailTemplateService.send error:",f),{success:!1,error:f.message||"Failed to send email"}):{success:g?.success||!1,emailId:g?.emailId,template:g?.template,error:g?.error}}catch(g){return console.error("EmailTemplateService.send exception:",g),{success:!1,error:g.message||"Unexpected error"}}}static async sendWelcome({to:e,userName:a,confirmationUrl:t,language:r="pt"}){return this.send("welcome",{to:e,variables:{userName:a,confirmationUrl:t},language:r})}static async sendLoginNewDevice({to:e,device:a,time:t,location:r,language:s="pt"}){return this.send("login-new-device",{to:e,variables:{device:a,time:t,location:r},language:s})}static async sendPasswordRecovery({to:e,userName:a,resetUrl:t,language:r="pt"}){return this.send("password-recovery",{to:e,variables:{userName:a,resetUrl:t},language:r})}static async sendPasswordChanged({to:e,time:a,language:t="pt"}){return this.send("password-changed",{to:e,variables:{time:a},language:t})}static async sendAccountConfirmed({to:e,userName:a,dashboardUrl:t,language:r="pt"}){return this.send("account-confirmed",{to:e,variables:{userName:a,dashboardUrl:t},language:r})}static async sendClassInvite({to:e,className:a,teacherName:t,acceptUrl:r,language:s="pt"}){return this.send("class-invite",{to:e,variables:{className:a,teacherName:t,acceptUrl:r},language:s})}static async sendClassInviteAccepted({to:e,studentName:a,className:t,time:r,language:s="pt"}){return this.send("class-invite-accepted",{to:e,variables:{studentName:a,className:t,time:r},language:s})}static async sendStudentAdded({to:e,studentName:a,className:t,teacherName:r,classUrl:s,language:o="pt"}){return this.send("student-added",{to:e,variables:{studentName:a,className:t,teacherName:r,classUrl:s},language:o})}static async sendStudentRemoved({to:e,className:a,time:t,language:r="pt"}){return this.send("student-removed",{to:e,variables:{className:a,time:t},language:r})}static async sendClassCreated({to:e,className:a,classCode:t,classUrl:r,language:s="pt"}){return this.send("class-created",{to:e,variables:{className:a,classCode:t,classUrl:r},language:s})}static async sendNewActivity({to:e,studentName:a,className:t,activityName:r,deadline:s,points:o,activityUrl:l,language:p="pt"}){return this.send("new-activity",{to:e,variables:{studentName:a,className:t,activityName:r,deadline:s,points:o,activityUrl:l},language:p})}static async sendDeadlineWarning({to:e,activityName:a,deadline:t,timeLeft:r,activityUrl:s,language:o="pt"}){return this.send("deadline-warning",{to:e,variables:{activityName:a,deadline:t,timeLeft:r,activityUrl:s},language:o})}static async sendActivityCorrected({to:e,activityName:a,grade:t,maxGrade:r,viewUrl:s,language:o="pt"}){return this.send("activity-corrected",{to:e,variables:{activityName:a,grade:t,maxGrade:r,viewUrl:s},language:o})}static async sendPlagiarismAlert({to:e,studentName:a,activityName:t,percentage:r,severity:s,reviewUrl:o,language:l="pt"}){return this.send("plagiarism-alert",{to:e,variables:{studentName:a,activityName:t,percentage:r,severity:s,reviewUrl:o},language:l})}static async sendMonthlyReport({to:e,userName:a,monthYear:t,activitiesCount:r,averageGrade:s,completionRate:o,reportUrl:l,language:p="pt"}){return this.send("monthly-report",{to:e,variables:{userName:a,monthYear:t,activitiesCount:r,averageGrade:s,completionRate:o,reportUrl:l},language:p})}static async preview(e,a={},t="pt"){return{templateId:e,variables:a,language:t,note:"Preview functionality - implement preview endpoint if needed"}}static getAvailableTemplates(){return[{id:"welcome",category:"auth",name:"Welcome Email"},{id:"login-new-device",category:"auth",name:"New Device Login"},{id:"password-recovery",category:"auth",name:"Password Recovery"},{id:"password-changed",category:"auth",name:"Password Changed"},{id:"account-confirmed",category:"auth",name:"Account Confirmed"},{id:"class-invite",category:"classes",name:"Class Invitation"},{id:"class-invite-accepted",category:"classes",name:"Invite Accepted"},{id:"student-added",category:"classes",name:"Student Added"},{id:"student-removed",category:"classes",name:"Student Removed"},{id:"class-created",category:"classes",name:"Class Created"},{id:"new-activity",category:"activities",name:"New Activity"},{id:"deadline-warning",category:"activities",name:"Deadline Warning"},{id:"activity-corrected",category:"activities",name:"Activity Corrected"},{id:"plagiarism-alert",category:"system",name:"Plagiarism Alert"},{id:"monthly-report",category:"system",name:"Monthly Report"}]}static async getLogs(e={}){const{limit:a=50,offset:t=0,templateId:r,status:s}=e;let o=n.from("email_logs").select("*").order("sent_at",{ascending:!1}).range(t,t+a-1);r&&(o=o.eq("template_id",r)),s&&(o=o.eq("status",s));const{data:l,error:p}=await o;return p?(console.error("Failed to fetch email logs:",p),{success:!1,error:p.message}):{success:!0,data:l}}static async getStatistics(e="30days"){try{const{data:a,error:t}=await n.rpc("get_email_statistics",{period_days:e==="7days"?7:e==="30days"?30:90});if(t)throw t;return{success:!0,data:a}}catch(a){return console.error("Failed to fetch email statistics:",a),{success:!1,error:a.message}}}}const d={AUTHENTICATION:"authentication",ACTIVITY:"activity",CORRECTION:"correction",PLAGIARISM:"plagiarism",SYSTEM:"system",CHATBOT:"chatbot",ANALYTICS:"analytics",GAMIFICATION:"gamification",FEEDBACK:"feedback",MEETING:"meeting",LIVE_CLASS:"live_class"},m={CRITICAL:"critical",HIGH:"high",MEDIUM:"medium",LOW:"low"},c={EMAIL:"email",PUSH:"push",BOTH:"both"},I={critical:{channels:["email","push"],retries:3,delay:0},high:{channels:["email","push"],retries:2,delay:0},medium:{channels:["push"],retries:1,delay:300},low:{channels:["push"],retries:0,delay:1800}};function U(i,e){return e===c.BOTH?["email","push"]:e===c.EMAIL?["email"]:e===c.PUSH?["push"]:(I[String(i||"").toLowerCase()]||I.medium).channels}const P={accountCreated:{id:"accountCreated",type:d.AUTHENTICATION,channel:c.EMAIL,priority:m.CRITICAL,title:"Conta criada com sucesso! 🎉",message:"Bem-vindo(a) ao TamanduAI! Confirme seu email para começar.",emailSubject:"Bem-vindo(a) ao TamanduAI! Confirme seu email",emailHtml:`
      <h2>Bem-vindo(a) ao TamanduAI! 🎓</h2>
      <p>Olá <strong>{{userName}}</strong>, sua conta foi criada com sucesso.</p>
      <p>Clique no botão para confirmar seu email:</p>
      <p><a href="{{confirmationUrl}}">Confirmar Email</a></p>
      <small>Este link expira em 24 horas.</small>
    `,variables:["userName","confirmationUrl"]},loginNewDevice:{id:"loginNewDevice",type:d.SYSTEM,channel:c.EMAIL,priority:m.MEDIUM,title:"Novo acesso detectado",message:"Login realizado em {device} às {time}. Foi você?",emailSubject:"Novo acesso detectado",emailHtml:"<h2>Novo acesso detectado</h2><p>Dispositivo: {{device}} às {{time}}</p>",variables:["device","time"]},passwordRecoveryRequested:{id:"passwordRecoveryRequested",type:d.AUTHENTICATION,channel:c.EMAIL,priority:m.CRITICAL,title:"Recuperação de senha solicitada",message:"Use o código enviado para redefinir sua senha.",emailSubject:"Recuperação de senha",emailHtml:"<h2>Recuperação de senha</h2><p>Olá {{userName}}, utilize o código enviado para redefinir sua senha.</p>",variables:["userName"]},passwordChanged:{id:"passwordChanged",type:d.AUTHENTICATION,channel:c.BOTH,priority:m.HIGH,title:"Senha alterada",message:"Sua senha foi alterada com sucesso às {time}.",emailSubject:"Senha alterada com sucesso",emailHtml:"<h2>Senha alterada</h2><p>Sua senha foi alterada às {{time}}</p>",variables:["time"]},profileCompleted:{id:"profileCompleted",type:d.SYSTEM,channel:c.PUSH,priority:m.MEDIUM,title:"Perfil completo!",message:"Agora você pode explorar todas as funcionalidades.",variables:[]},classInviteSent:{id:"classInviteSent",type:d.SYSTEM,channel:c.EMAIL,priority:m.HIGH,title:"Convite para turma",message:"Você foi convidado(a) para a turma {{className}}",emailSubject:"Convite para a turma {{className}}",emailHtml:'<h2>Convite para turma</h2><p>Você foi convidado(a) para a turma <strong>{{className}}</strong>.</p><p>Clique para aceitar: <a href="{{acceptUrl}}">Aceitar convite</a></p>',variables:["className","acceptUrl"]},classInviteAccepted:{id:"classInviteAccepted",type:d.SYSTEM,channel:c.PUSH,priority:m.MEDIUM,title:"Convite aceito",message:"{{studentName}} entrou na turma {{className}}",variables:["studentName","className"]},studentAddedToClass:{id:"studentAddedToClass",type:d.SYSTEM,channel:c.PUSH,priority:m.MEDIUM,title:"Aluno adicionado",message:"{{studentName}} foi adicionado na turma {{className}}",variables:["studentName","className"]},studentRemovedFromClass:{id:"studentRemovedFromClass",type:d.SYSTEM,channel:c.BOTH,priority:m.HIGH,title:"Você foi removido da turma",message:"Turma: {{className}}",emailSubject:"Remoção da turma {{className}}",emailHtml:"<h2>Remoção da turma</h2><p>Você foi removido da turma {{className}}</p>",variables:["className"]},classCreated:{id:"classCreated",type:d.SYSTEM,channel:c.PUSH,priority:m.LOW,title:"Nova turma criada",message:"{{className}} foi criada com sucesso",variables:["className"]},accountConfirmed:{id:"accountConfirmed",type:d.AUTHENTICATION,channel:c.BOTH,priority:m.HIGH,title:"Email confirmado! ✅",message:"Sua conta está ativa. Complete seu perfil para começar.",emailSubject:"Sua conta foi confirmada",emailHtml:`
      <h2>Conta confirmada</h2>
      <p>Olá <strong>{{userName}}</strong>, sua conta foi confirmada com sucesso.</p>
    `,variables:["userName"]},newActivity:{id:"newActivity",type:d.ACTIVITY,channel:c.BOTH,priority:m.HIGH,title:"Nova atividade: {{activityName}}",message:"Prazo: {{deadline}} • Pontuação: {{points}} pts",emailSubject:"Nova atividade em {{className}}: {{activityName}}",emailHtml:`
      <h2>📝 Nova Atividade Disponível</h2>
      <p>Olá <strong>{{studentName}}</strong>,</p>
      <p>Uma nova atividade foi publicada na turma <strong>{{className}}</strong>:</p>
      <p><strong>{{activityName}}</strong></p>
      <p>Prazo: {{deadline}} | Pontos: {{points}}</p>
      <p><a href="{{activityUrl}}">Ver Atividade</a></p>
    `,variables:["studentName","className","activityName","deadline","points","activityUrl"]},deadlineWarning24h:{id:"deadlineWarning24h",type:d.ACTIVITY,channel:c.BOTH,priority:m.CRITICAL,title:"⏰ Prazo em 24 horas!",message:"{{activityName}} vence amanhã às {{time}}",emailSubject:"Lembrete: {{activityName}} vence em 24 horas",emailHtml:`
      <h2>⏰ Prazo em 24 horas</h2>
      <p>Atividade: {{activityName}}</p>
      <p>Vence em: {{deadline}}</p>
      <p><a href="{{activityUrl}}">Entregar agora</a></p>
    `,variables:["activityName","deadline","time","activityUrl"]},activityCorrected:{id:"activityCorrected",type:d.CORRECTION,channel:c.BOTH,priority:m.HIGH,title:"Atividade corrigida! 🎉",message:"{{activityName}} • Nota: {{grade}}/{{maxGrade}}",emailSubject:"Correção disponível: {{activityName}}",emailHtml:`
      <h2>✅ Atividade Corrigida</h2>
      <p>{{activityName}} — Nota: {{grade}}/{{maxGrade}}</p>
      <p><a href="{{viewUrl}}">Ver detalhes</a></p>
    `,variables:["activityName","grade","maxGrade","viewUrl"]},plagiarismDetected:{id:"plagiarismDetected",type:d.PLAGIARISM,channel:c.EMAIL,priority:m.CRITICAL,title:"🚨 Plágio detectado",message:"{{studentName}} • {{percentage}}% similaridade • {{activityName}}",emailSubject:"Alerta de Plágio: {{activityName}}",emailHtml:`
      <h2>🚨 Alerta de Plágio</h2>
      <p>Aluno: {{studentName}}</p>
      <p>Atividade: {{activityName}}</p>
      <p>Similaridade: {{percentage}}%</p>
      <p><a href="{{reviewUrl}}">Revisar submissão</a></p>
    `,variables:["studentName","activityName","percentage","reviewUrl"]},analysisStarted:{id:"analysisStarted",type:d.PLAGIARISM,channel:c.PUSH,priority:m.LOW,title:"Análise anti-plágio iniciada",message:"Verificando {{activityName}}..."},falsePositiveMarked:{id:"falsePositiveMarked",type:d.PLAGIARISM,channel:c.PUSH,priority:m.LOW,title:"Falso positivo marcado",message:"Análise de plágio atualizada para {{activityName}}"},chatbotTrainingComplete:{id:"chatbotTrainingComplete",type:d.CHATBOT,channel:c.PUSH,priority:m.MEDIUM,title:"Chatbot treinado com sucesso!",message:"Base atualizada com {{filesCount}} arquivos",variables:["filesCount"]},chatbotTrainingError:{id:"chatbotTrainingError",type:d.CHATBOT,channel:c.PUSH,priority:m.HIGH,title:"Erro no treinamento",message:"Falha ao processar {{fileName}}",variables:["fileName"]},newMaterialProcessed:{id:"newMaterialProcessed",type:d.CHATBOT,channel:c.PUSH,priority:m.LOW,title:"Material processado",message:"{{fileName}} adicionado à base",variables:["fileName"]},outOfScopeInteraction:{id:"outOfScopeInteraction",type:d.CHATBOT,channel:c.PUSH,priority:m.LOW,title:"Pergunta fora do escopo",message:"Aluno perguntou sobre: {{topic}}",variables:["topic"]},monthlyReportGenerated:{id:"monthlyReportGenerated",type:d.ANALYTICS,channel:c.EMAIL,priority:m.MEDIUM,title:"Relatório mensal gerado",message:"Seu relatório de {{monthYear}} está pronto",emailSubject:"Relatório mensal - {{monthYear}}",emailHtml:"<h2>Relatório mensal</h2><p>Seu relatório de {{monthYear}} está pronto.</p>",variables:["monthYear"]},performanceGoalAchieved:{id:"performanceGoalAchieved",type:d.ANALYTICS,channel:c.BOTH,priority:m.MEDIUM,title:"Meta de desempenho atingida",message:"Parabéns! Você atingiu sua meta",emailSubject:"Meta de desempenho atingida",emailHtml:"<h2>Meta de desempenho atingida</h2><p>Parabéns!</p>",variables:[]},lowPerformanceDetected:{id:"lowPerformanceDetected",type:d.ANALYTICS,channel:c.EMAIL,priority:m.HIGH,title:"Baixo desempenho detectado",message:"Identificamos baixo desempenho em {{subject}}",emailSubject:"Baixo desempenho detectado",emailHtml:"<h2>Baixo desempenho detectado</h2><p>Área: {{subject}}</p>",variables:["subject"]},classReportAvailable:{id:"classReportAvailable",type:d.ANALYTICS,channel:c.PUSH,priority:m.LOW,title:"Relatório de turma disponível",message:"O relatório da turma {{className}} está disponível",variables:["className"]},xpEarned:{id:"xpEarned",type:d.GAMIFICATION,channel:c.PUSH,priority:m.LOW,title:"🌟 +{{xp}} XP ganho!",message:"{{reason}} • Total: {{totalXP}} XP",variables:["xp","reason","totalXP"]},badgeEarned:{id:"badgeEarned",type:d.GAMIFICATION,channel:c.BOTH,priority:m.MEDIUM,title:"🏆 Nova badge desbloqueada!",message:"{{badgeName}} - {{badgeDescription}}",emailSubject:"Você desbloqueou: {{badgeName}}",emailHtml:`
      <h2>🏆 Nova Badge Desbloqueada!</h2>
      <p><strong>{{badgeName}}</strong></p>
      <p>{{badgeDescription}}</p>
      <p><a href="{{profileUrl}}">Ver seu perfil</a></p>
    `,variables:["badgeName","badgeDescription","profileUrl"]},levelUp:{id:"levelUp",type:d.GAMIFICATION,channel:c.BOTH,priority:m.HIGH,title:"🎉 Level Up! Nível {{level}}",message:"Parabéns! Você alcançou o nível {{level}}!",emailSubject:"Parabéns! Você subiu para o nível {{level}}",emailHtml:`
      <h2>🎉 Level Up!</h2>
      <p>Parabéns! Você alcançou o <strong>nível {{level}}</strong>!</p>
      <p>Continue assim e desbloqueie novas conquistas.</p>
    `,variables:["level"]},feedbackReceived:{id:"feedbackReceived",type:d.FEEDBACK,channel:c.BOTH,priority:m.HIGH,title:"💬 Novo feedback do professor",message:"{{teacherName}} comentou em {{activityName}}",emailSubject:"Feedback em {{activityName}}",emailHtml:`
      <h2>💬 Novo Feedback</h2>
      <p>Professor(a) <strong>{{teacherName}}</strong> deixou um comentário em <strong>{{activityName}}</strong></p>
      <p><a href="{{viewUrl}}">Ver feedback</a></p>
    `,variables:["teacherName","activityName","viewUrl"]},meetingScheduled:{id:"meetingScheduled",type:d.MEETING,channel:c.BOTH,priority:m.MEDIUM,title:"📅 Reunião agendada",message:"{{meetingTitle}} em {{date}} às {{time}}",emailSubject:"Reunião agendada: {{meetingTitle}}",emailHtml:`
      <h2>📅 Reunião Agendada</h2>
      <p><strong>{{meetingTitle}}</strong></p>
      <p>Data: {{date}} às {{time}}</p>
      <p><a href="{{meetingUrl}}">Adicionar ao calendário</a></p>
    `,variables:["meetingTitle","date","time","meetingUrl"]},meetingReminder1h:{id:"meetingReminder1h",type:d.MEETING,channel:c.BOTH,priority:m.HIGH,title:"⏰ Reunião em 1 hora!",message:"{{meetingTitle}} às {{time}}",emailSubject:"Lembrete: {{meetingTitle}} em 1 hora",emailHtml:`
      <h2>⏰ Reunião em 1 hora</h2>
      <p><strong>{{meetingTitle}}</strong> às {{time}}</p>
      <p><a href="{{meetingUrl}}">Entrar na reunião</a></p>
    `,variables:["meetingTitle","time","meetingUrl"]},meetingReminder5min:{id:"meetingReminder5min",type:d.MEETING,channel:c.PUSH,priority:m.CRITICAL,title:"⏰ Reunião em 5 minutos!",message:"{{meetingTitle}} - Prepare-se!",variables:["meetingTitle","meetingUrl"]},liveClassStarting:{id:"liveClassStarting",type:d.LIVE_CLASS,channel:c.BOTH,priority:m.CRITICAL,title:"🔴 Aula ao vivo começando AGORA!",message:"{{className}} - Clique para entrar",emailSubject:"Aula ao vivo: {{className}}",emailHtml:`
      <h2>🔴 Aula Ao Vivo</h2>
      <p><strong>{{className}}</strong> está começando agora!</p>
      <p><a href="{{liveClassUrl}}">Entrar na aula</a></p>
    `,variables:["className","liveClassUrl"]},liveClassReminder15min:{id:"liveClassReminder15min",type:d.LIVE_CLASS,channel:c.BOTH,priority:m.HIGH,title:"⏰ Aula ao vivo em 15 minutos",message:"{{className}} - Prepare seus materiais!",emailSubject:"Aula ao vivo em 15 minutos: {{className}}",emailHtml:`
      <h2>⏰ Aula ao vivo em 15 minutos</h2>
      <p><strong>{{className}}</strong></p>
      <p>Prepare seus materiais e esteja pronto!</p>
      <p><a href="{{liveClassUrl}}">Link da aula</a></p>
    `,variables:["className","liveClassUrl"]},liveClassReminder5min:{id:"liveClassReminder5min",type:d.LIVE_CLASS,channel:c.PUSH,priority:m.HIGH,title:"⏰ Aula ao vivo em 5 minutos",message:"{{className}} - Não se atrase!",variables:["className"]}},S={async send(i,{userId:e,email:a,variables:t={},priorityOverride:r,channelOverride:s,metadata:o}={}){const l=P[i];if(!l)throw new Error(`Unknown notification template: ${i}`);const p=U(r||l.priority,s||l.channel),u=v=>_.render(v,t),g=[];if(p.includes("push")){const v=u(l.title||""),b=u(l.message||"");g.push(M.sendNotification({title:v,message:b,type:l.type,category:l.type,priority:(r||l.priority||"medium").toLowerCase(),metadata:o},e))}if(p.includes("email")){if(!a)throw new Error("Email recipient is required for email delivery");const b={accountCreated:"welcome",classInviteSent:"class-invite",classInviteAccepted:"class-invite-accepted",newActivity:"new-activity",deadlineWarning24h:"deadline-warning",activityCorrected:"activity-corrected",plagiarismDetected:"plagiarism-alert",monthlyReportGenerated:"monthly-report",passwordRecoveryRequested:"password-recovery",passwordChanged:"password-changed",accountConfirmed:"account-confirmed",loginNewDevice:"login-new-device",studentAddedToClass:"student-added",studentRemovedFromClass:"student-removed",classCreated:"class-created"}[i];if(b)g.push(O.send(b,{to:a,variables:t,language:t.language||"pt"}));else{const C=u(l.emailSubject||l.title||"Notificação"),A=l.emailHtml?u(l.emailHtml):void 0,E=A?void 0:u(l.message||"");g.push(_.sendEmail({to:a,subject:C,html:A,text:E}))}}return await Promise.allSettled(g)},async notifyNewActivity({userId:i,email:e,variables:a,metadata:t}){return this.send("newActivity",{userId:i,email:e,variables:a,metadata:t})},async notifyDeadline24h({userId:i,email:e,variables:a,metadata:t}){return this.send("deadlineWarning24h",{userId:i,email:e,variables:a,metadata:t})},async notifyActivityCorrected({userId:i,email:e,variables:a,metadata:t}){return this.send("activityCorrected",{userId:i,email:e,variables:a,metadata:t})},async notifyPlagiarismDetected({userId:i,email:e,variables:a,metadata:t}){return this.send("plagiarismDetected",{userId:i,email:e,variables:a,metadata:t})}},L={async getClasses({teacherId:i,studentId:e,activeOnly:a=!0}={}){let t=n.from("classes").select(`
        *,
        members:class_members(*, user:profiles(*)),
        meetings:meetings(*)
      `).order("name",{ascending:!0});i&&(t=t.eq("created_by",i)),a&&(t=t.eq("is_active",!0));const{data:r,error:s}=await t;if(s)throw console.error("Error fetching classes:",s),s;return e?r.filter(o=>o.members?.some(l=>l.user_id===e&&l.role==="student")):r},async getClassById(i){const{data:e,error:a}=await n.from("classes").select(`
        *,
        members:class_members(*, user:profiles(*)),
        meetings:meetings(*, 
          participants:meeting_participants(*, user:profiles(*))
        )
      `).eq("id",i).single();if(a)throw console.error(`Error fetching class ${i}:`,a),a;return e},async createClass(i,e=[]){const{name:a,description:t,teacher_id:r,subject:s,course:o,period:l,grade_level:p,academic_year:u,color:g,student_capacity:f,school_id:v,is_school_managed:b,grading_system:C}=i,{data:A,error:E}=await n.from("profiles").select("id").eq("id",r).maybeSingle();if(!A&&!E){console.log("Profile not found for teacher, creating one...");const{error:h}=await n.from("profiles").insert([{id:r,role:"teacher",created_at:new Date().toISOString(),updated_at:new Date().toISOString()}]);if(h&&(console.error("Error creating teacher profile:",h),h.code!=="23505"))throw new Error(`Erro ao criar perfil do professor: ${h.message}`)}const T={name:a,description:t||null,created_by:r,subject:s||null,course:o||null,period:l||null,grade_level:p||null,academic_year:(()=>{const h=parseInt(u,10);return Number.isFinite(h)?h:new Date().getFullYear()})(),grading_system:C||"0-10",color:g||"#6366f1",student_capacity:typeof f=="number"?f:30,room_number:i.room_number||null,is_online:!!i.is_online,meeting_link:i.meeting_link||null,chatbot_enabled:!!i.chatbot_enabled,school_id:v||null,is_school_managed:!!b,is_active:!0};console.log("Creating class with data:",T);const{data:N,error:w}=await n.from("classes").insert([T]).select().single();if(w)throw console.error("Error creating class:",w),console.error("Error details:",{code:w.code,message:w.message,details:w.details,hint:w.hint}),new Error(`Erro ao criar turma: ${w.message}. Detalhes: ${w.hint||w.details||"Nenhum detalhe adicional"}`);console.log("Class created successfully:",N);try{await S.send("classCreated",{userId:r,variables:{className:a},channelOverride:"push",metadata:{classId:N.id}})}catch(h){console.warn("Falha ao notificar criação de turma:",h)}try{const{error:h}=await n.from("class_members").insert([{class_id:N.id,user_id:r,role:"teacher",joined_at:new Date().toISOString()}]);h&&h.code!=="23505"&&console.warn("Erro ao adicionar professor como membro:",h)}catch(h){console.warn("Falha ao adicionar professor como membro da turma:",h)}if(e&&e.length>0)try{await this.addStudentsToClass(N.id,e)}catch(h){console.warn("Falha ao adicionar alunos:",h)}try{const{error:h}=await n.from("chatbot_configurations").upsert({class_id:N.id,enabled:!0,keywords:[],themes:[],scope_restrictions:[],created_at:new Date().toISOString(),updated_at:new Date().toISOString()},{onConflict:"class_id"});h?console.warn("Erro ao garantir configuração do chatbot:",h):console.log("Chatbot configuration ensured for class:",N.id)}catch(h){console.warn("Falha ao garantir chatbot para a turma:",h)}return this.getClassById(N.id)},async updateClass(i,e,a){const t={...e||{}};if(Object.prototype.hasOwnProperty.call(t,"academic_year")){const s=parseInt(t.academic_year,10);t.academic_year=Number.isFinite(s)?s:new Date().getFullYear()}const{error:r}=await n.from("classes").update({...t,updated_at:new Date().toISOString()}).eq("id",i);if(r)throw console.error(`Error updating class ${i}:`,r),r;if(Array.isArray(a)){const{data:s}=await n.from("class_members").select("user_id").eq("class_id",i).eq("role","student"),o=(s||[]).map(u=>u.user_id),l=a.filter(u=>!o.includes(u)),p=o.filter(u=>!a.includes(u));await Promise.all([this.addStudentsToClass(i,l),this.removeStudentsFromClass(i,p)])}return this.getClassById(i)},async deleteClass(i){const{error:e}=await n.from("classes").update({is_active:!1,updated_at:new Date().toISOString()}).eq("id",i);if(e)throw console.error(`Error deleting class ${i}:`,e),e;return!0},async addStudentsToClass(i,e){if(!e||e.length===0)return[];const{data:a,error:t}=await n.from("class_members").insert(e.map(r=>({class_id:i,user_id:r,role:"student",joined_at:new Date().toISOString()}))).select();if(t)throw console.error(`Error adding students to class ${i}:`,t),t;try{const[{data:r},{data:s}]=await Promise.all([n.from("classes").select("id, name, created_by").eq("id",i).single(),n.from("profiles").select("id, full_name").in("id",e)]);if(r?.created_by&&s?.length)for(const o of s)await S.send("studentAddedToClass",{userId:r.created_by,variables:{studentName:o.full_name||"Aluno",className:r.name||"Turma"},channelOverride:"push",metadata:{classId:i,studentId:o.id}})}catch(r){console.warn("Falha ao notificar alunos adicionados:",r)}return a},async removeStudentsFromClass(i,e){if(!e||e.length===0)return!0;const{error:a}=await n.from("class_members").delete().eq("class_id",i).in("user_id",e).eq("role","student");if(a)throw console.error(`Error removing students from class ${i}:`,a),a;try{const[{data:t},{data:r}]=await Promise.all([n.from("classes").select("id, name").eq("id",i).single(),n.from("profiles").select("id, full_name").in("id",e)]);for(const s of r||[])await S.send("studentRemovedFromClass",{userId:s.id,email:void 0,variables:{className:t?.name||"Turma"},metadata:{classId:i}})}catch(t){console.warn("Falha ao notificar alunos removidos:",t)}return!0},async searchClasses(i,{onlyActive:e=!0}={}){let a=n.from("classes").select("*").or(`name.ilike.%${i}%,description.ilike.%${i}%`);e&&(a=a.eq("is_active",!0));const{data:t,error:r}=await a;if(r)throw console.error("Error searching classes:",r),r;return t},async updateClassSchedule(i,e){const{data:a,error:t}=await n.from("classes").update({vacation_start:e.vacation_start||null,vacation_end:e.vacation_end||null,cancelled_dates:e.cancelled_dates||null,updated_at:new Date().toISOString()}).eq("id",i).select().single();if(t)throw console.error(`Error updating class schedule ${i}:`,t),t;return a},async getClassStats(i){try{const{data:e,error:a}=await n.from("class_members").select("user_id, role").eq("class_id",i);if(a)throw a;const{count:t,error:r}=await n.from("activity_class_assignments").select("*",{count:"exact",head:!0}).eq("class_id",i);if(r)throw r;const{data:s,error:o}=await n.from("submissions").select("id, activity_id").eq("status","pending").in("activity_id",n.from("activity_class_assignments").select("activity_id").eq("class_id",i)),l=e?.filter(u=>u.role==="student").length||0,p=e?.filter(u=>u.role==="teacher").length||0;return{studentCount:l,teacherCount:p,activitiesCount:t||0,pendingCorrections:s?.length||0,totalMembers:e?.length||0}}catch(e){return console.error(`Error getting stats for class ${i}:`,e),{studentCount:0,teacherCount:0,activitiesCount:0,pendingCorrections:0,totalMembers:0}}},async generateInviteCode(i){const e="ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";let a="";for(let s=0;s<8;s++)a+=e.charAt(Math.floor(Math.random()*e.length));const{data:t,error:r}=await n.from("classes").update({invite_code:a,updated_at:new Date().toISOString()}).eq("id",i).select("invite_code").single();if(r)throw console.error(`Error generating invite code for class ${i}:`,r),r;return t.invite_code},async archiveClass(i){const{error:e}=await n.from("classes").update({is_active:!1,updated_at:new Date().toISOString()}).eq("id",i);if(e)throw console.error(`Error archiving class ${i}:`,e),e;return!0},async getClassMembers(i,{role:e=null}={}){let a=n.from("class_members").select(`
        *,
        user:profiles(*)
      `).eq("class_id",i).order("joined_at",{ascending:!1});e&&(a=a.eq("role",e));const{data:t,error:r}=await a;if(r)throw console.error(`Error fetching members for class ${i}:`,r),r;return t},subscribeToClasses(i){const e=n.channel("classes_changes").on("postgres_changes",{event:"*",schema:"public",table:"classes"},a=>{i(a)}).subscribe();return()=>{n.removeChannel(e)}}};export{L as C};
